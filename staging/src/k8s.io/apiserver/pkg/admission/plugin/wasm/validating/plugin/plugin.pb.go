// Code generated by protoc-gen-go-plugin. DO NOT EDIT.
// versions:
// 	protoc-gen-go-plugin v0.1.0
// 	protoc               v3.11.2
// source: plugin.proto

package plugin

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ValidateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdmissionReview []byte `protobuf:"bytes,1,opt,name=admissionReview,proto3" json:"admissionReview,omitempty"`
}

func (x *ValidateRequest) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *ValidateRequest) GetAdmissionReview() []byte {
	if x != nil {
		return x.AdmissionReview
	}
	return nil
}

type ValidateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdmissionReview []byte `protobuf:"bytes,1,opt,name=admissionReview,proto3" json:"admissionReview,omitempty"`
}

func (x *ValidateResponse) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *ValidateResponse) GetAdmissionReview() []byte {
	if x != nil {
		return x.AdmissionReview
	}
	return nil
}

// TODO this should look like SubjectAccessReviewSpec
type SubjectAccessReviewSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Verb     string `protobuf:"bytes,2,opt,name=verb,proto3" json:"verb,omitempty"`
	Resource string `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *SubjectAccessReviewSpec) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *SubjectAccessReviewSpec) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SubjectAccessReviewSpec) GetVerb() string {
	if x != nil {
		return x.Verb
	}
	return ""
}

func (x *SubjectAccessReviewSpec) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

type SubjectAccessReviewStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allowed bool   `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	Reason  string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *SubjectAccessReviewStatus) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *SubjectAccessReviewStatus) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *SubjectAccessReviewStatus) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// go:plugin type=plugin version=1
type Validation interface {
	Validate(context.Context, ValidateRequest) (ValidateResponse, error)
}

// go:plugin type=host version=1
type SubjectAccessReview interface {
	Authorize(context.Context, SubjectAccessReviewSpec) (SubjectAccessReviewStatus, error)
}
